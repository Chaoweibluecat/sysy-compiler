decl @getint(): i32

decl @getch(): i32

decl @getarray(*i32): i32

decl @putint(i32)

decl @putch(i32)

decl @putarray(i32, *i32)

decl @starttime()

decl @stoptime()

fun @init(@arr: *[[i32, 10], 10]) {
%entry:
  %0 = alloc *[[i32, 10], 10]
  store @arr, %0
  @i = alloc i32
  store 0, @i
  jump %while_entry

%while_entry:
  %1 = load @i
  %2 = lt %1, 10
  br %2, %while_body, %while_end

%while_body:
  @j = alloc i32
  store 0, @j
  jump %while_entry_0

%while_entry_0:
  %3 = load @j
  %4 = lt %3, 10
  br %4, %while_body_0, %while_end_0

%while_body_0:
  @k = alloc i32
  store 0, @k
  jump %while_entry_1

%while_entry_1:
  %5 = load @k
  %6 = lt %5, 10
  br %6, %while_body_1, %while_end_1

%while_body_1:
  %7 = load %0
  %8 = load @i
  %9 = getelemptr %7, %8
  %10 = load @j
  %11 = getelemptr %9, %10
  %12 = load @k
  %13 = getptr %11, %12
  %14 = load @i
  %15 = mul %14, 100
  %16 = load @j
  %17 = mul %16, 10
  %18 = add %15, %17
  %19 = load @k
  %20 = add %18, %19
  store %20, %13
  %21 = load @k
  %22 = add %21, 1
  store %22, @k
  jump %while_entry_1

%while_end_1:
  %23 = load @j
  %24 = add %23, 1
  store %24, @j
  jump %while_entry_0

%while_end_0:
  %25 = load @i
  %26 = add %25, 1
  store %26, @i
  jump %while_entry

%while_end:
  ret
}

fun @f1(@a0: *i32, @a1: *i32, @a2: *i32, @a3: *i32, @a4: *i32, @a5: *i32, @a6: *i32, @a7: *i32, @a8: *i32, @a9: *i32): i32 {
%entry:
  %27 = alloc *i32
  store @a0, %27
  %28 = alloc *i32
  store @a1, %28
  %29 = alloc *i32
  store @a2, %29
  %30 = alloc *i32
  store @a3, %30
  %31 = alloc *i32
  store @a4, %31
  %32 = alloc *i32
  store @a5, %32
  %33 = alloc *i32
  store @a6, %33
  %34 = alloc *i32
  store @a7, %34
  %35 = alloc *i32
  store @a8, %35
  %36 = alloc *i32
  store @a9, %36
  %37 = load %27
  %38 = getptr %37, 0
  %39 = load %38
  %40 = load %28
  %41 = getptr %40, 1
  %42 = load %41
  %43 = add %39, %42
  %44 = load %29
  %45 = getptr %44, 2
  %46 = load %45
  %47 = add %43, %46
  %48 = load %30
  %49 = getptr %48, 3
  %50 = load %49
  %51 = add %47, %50
  %52 = load %31
  %53 = getptr %52, 4
  %54 = load %53
  %55 = add %51, %54
  %56 = load %32
  %57 = getptr %56, 5
  %58 = load %57
  %59 = add %55, %58
  %60 = load %33
  %61 = getptr %60, 6
  %62 = load %61
  %63 = add %59, %62
  %64 = load %34
  %65 = getptr %64, 7
  %66 = load %65
  %67 = add %63, %66
  %68 = load %35
  %69 = getptr %68, 8
  %70 = load %69
  %71 = add %67, %70
  %72 = load %36
  %73 = getptr %72, 9
  %74 = load %73
  %75 = add %71, %74
  ret %75
}

fun @f2(@a0: *[i32, 10], @a1: *i32, @a2: i32, @a3: *i32, @a4: *i32, @a5: *[[i32, 10], 10], @a6: *i32, @a7: *i32, @a8: i32, @a9: *[i32, 10]): i32 {
%entry:
  %76 = alloc *[i32, 10]
  store @a0, %76
  %77 = alloc *i32
  store @a1, %77
  %78 = alloc i32
  store @a2, %78
  %79 = alloc *i32
  store @a3, %79
  %80 = alloc *i32
  store @a4, %80
  %81 = alloc *[[i32, 10], 10]
  store @a5, %81
  %82 = alloc *i32
  store @a6, %82
  %83 = alloc *i32
  store @a7, %83
  %84 = alloc i32
  store @a8, %84
  %85 = alloc *[i32, 10]
  store @a9, %85
  %86 = load %76
  %87 = getelemptr %86, 0
  %88 = getptr %87, 9
  %89 = load %88
  %90 = load %77
  %91 = getptr %90, 1
  %92 = load %91
  %93 = add %89, %92
  %94 = load %78
  %95 = add %93, %94
  %96 = load %79
  %97 = getptr %96, 3
  %98 = load %97
  %99 = add %95, %98
  %100 = load %80
  %101 = getptr %100, 4
  %102 = load %101
  %103 = add %99, %102
  %104 = load %81
  %105 = getelemptr %104, 5
  %106 = getelemptr %105, 5
  %107 = getptr %106, 5
  %108 = load %107
  %109 = add %103, %108
  %110 = load %82
  %111 = getptr %110, 6
  %112 = load %111
  %113 = add %109, %112
  %114 = load %83
  %115 = getptr %114, 7
  %116 = load %115
  %117 = add %113, %116
  %118 = load %84
  %119 = add %117, %118
  %120 = load %85
  %121 = getelemptr %120, 9
  %122 = getptr %121, 8
  %123 = load %122
  %124 = add %119, %123
  ret %124
}

fun @main(): i32 {
%entry:
  @arr = alloc [[[i32, 10], 10], 10]
  @sum = alloc i32
  store 0, @sum
  %125 = getelemptr @arr, 0
  call @init(%125)
  %126 = load @sum
  %127 = getelemptr @arr, 0
  %128 = getelemptr %127, 0
  %129 = getelemptr %128, 0
  %130 = getelemptr @arr, 1
  %131 = getelemptr %130, 1
  %132 = getelemptr %131, 0
  %133 = getelemptr @arr, 2
  %134 = getelemptr %133, 2
  %135 = getelemptr %134, 0
  %136 = getelemptr @arr, 3
  %137 = getelemptr %136, 3
  %138 = getelemptr %137, 0
  %139 = getelemptr @arr, 4
  %140 = getelemptr %139, 4
  %141 = getelemptr %140, 0
  %142 = getelemptr @arr, 5
  %143 = getelemptr %142, 5
  %144 = getelemptr %143, 0
  %145 = getelemptr @arr, 6
  %146 = getelemptr %145, 6
  %147 = getelemptr %146, 0
  %148 = getelemptr @arr, 7
  %149 = getelemptr %148, 7
  %150 = getelemptr %149, 0
  %151 = getelemptr @arr, 8
  %152 = getelemptr %151, 8
  %153 = getelemptr %152, 0
  %154 = getelemptr @arr, 9
  %155 = getelemptr %154, 9
  %156 = getelemptr %155, 0
  %157 = call @f1(%129, %132, %135, %138, %141, %144, %147, %150, %153, %156)
  %158 = add %126, %157
  store %158, @sum
  %159 = load @sum
  %160 = getelemptr @arr, 0
  %161 = getelemptr %160, 0
  %162 = getelemptr @arr, 1
  %163 = getelemptr %162, 1
  %164 = getelemptr %163, 0
  %165 = getelemptr @arr, 2
  %166 = getelemptr %165, 2
  %167 = getelemptr %166, 2
  %168 = load %167
  %169 = getelemptr @arr, 3
  %170 = getelemptr %169, 3
  %171 = getelemptr %170, 0
  %172 = getelemptr @arr, 4
  %173 = getelemptr %172, 4
  %174 = getelemptr %173, 0
  %175 = getelemptr @arr, 0
  %176 = getelemptr @arr, 6
  %177 = getelemptr %176, 6
  %178 = getelemptr %177, 0
  %179 = getelemptr @arr, 7
  %180 = getelemptr %179, 7
  %181 = getelemptr %180, 0
  %182 = getelemptr @arr, 8
  %183 = getelemptr %182, 8
  %184 = getelemptr %183, 8
  %185 = load %184
  %186 = getelemptr @arr, 9
  %187 = getelemptr %186, 0
  %188 = call @f2(%161, %164, %168, %171, %174, %175, %178, %181, %185, %187)
  %189 = add %159, %188
  store %189, @sum
  %190 = load @sum
  call @putint(%190)
  call @putch(10)
  ret 0
}
